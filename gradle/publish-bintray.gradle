apply plugin: 'base'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


task stubSources(type: Jar) {
    classifier = 'sources'
}


afterEvaluate {
    publishing {
        publications {
            all { publication ->
                pom.withXml(configureMavenCentralMetadata)
            }
        }
    }
}



// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
//In the mpp configuration of one module after 1.3,
// it is not uploaded unless you explicitly specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatformbut a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

//The task of bintrayUpload depends on publishToMavenLocal set in the previous section.
// This will create maven artifacts when running bintrayUplaod's task.
bintrayUpload.dependsOn publishToMavenLocal

if (project.hasProperty("bintray.user")) {
    bintray {
        user = project.property('bintray.user')
        key = project.property('bintray.key')
        configurations = ['archives']
        publications = ['maven']

        pkg {
            repo = 'data2viz'
            name = 'data2viz'
            userOrg = 'data2viz'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/data2viz/data2viz.git'
            version {
                name = project.version
                vcsTag = "v${project.version}"
            }
        }

    }

}


project.ext.configureMavenCentralMetadata = { pom ->
    def root = asNode()
    root.appendNode('name', project.name)
    root.appendNode('description', "Data2viz ${project.name} library")
    root.appendNode('url', 'https://github.com/data2viz/data2viz')
    root.children().last() + pomConfig
}

project.ext.pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "Data2viz"
            name "Data2viz team"
            organization "Data2viz"
            organizationUrl "https://data2viz.io"
        }
    }

    scm {
        url "https://github.com/data2viz/data2viz"
    }
}
